generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["referentialIntegrity"]
}

datasource db {
    provider             = "mysql"
    url                  = env("DATABASE_URL")
    shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
    referentialIntegrity = "prisma"
}

enum Death {
    ALIVE
    DEAD
    FAKED
}

model Player {
    id        String        @id @unique @default(cuid())
    discordId String?
    name      String        @unique
    money     Int           @default(10)
    alive     Death         @default(ALIVE)
    roles     PlayerRoles[]
    items     PlayerItems[]
    //ballData  PlayerBallData?
}

// model PlayerBallData {
//     name     String
//     avatar   String
//     player   Player @relation(fields: [playerId], references: [id])
//     playerId String @unique
// }

model Role {
    id          String        @id @unique @default(cuid())
    name        String        @unique
    description String        @db.LongText
    players     PlayerRoles[]
}

model PlayerRoles {
    player     Player   @relation(fields: [playerName], references: [name])
    playerName String
    role       Role     @relation(fields: [roleName], references: [name])
    roleName   String
    assignedAt DateTime @default(now())

    @@id([playerName, roleName])
}

model Item {
    id          String        @id @unique @default(cuid())
    name        String        @unique
    price       Int
    description String        @db.LongText
    players     PlayerItems[]
}

model PlayerItems {
    player     Player   @relation(fields: [playerName], references: [name])
    playerName String
    item       Item     @relation(fields: [itemName], references: [name])
    itemName   String
    assignedAt DateTime @default(now())
    amount     Int      @default(1)

    @@id([playerName, itemName])
}

model KeyV {
    key        String  @id @unique
    value      String?
    valueArray Json?
}
